Standalone Active Record

This takes the ActiveRecord and Database Library from 2.1.0 and makes it work without the rest of CI.

Just configure database.php 

then include active_init.php

and $db will be set to what is usually $this->db or $this->CI->db in CI

$dbforge will be setup as well

Documentopia.com

独立的Active Record

大胆的配置 database.php

然后 include `active_init.php`

和 $db 将会固定为通常在CI中是 用 $this->db 或者 $this->CI->db

$dbforge 将会启动

Documentopia.com
-----------------------
假如`active_init.php`中的$db与你项目中的$db冲突，因为`active_init.php`中的$db是全局变量
假如将`active_init.php`中的`$db`修改为`$db2`,你只需要将`$db`修改为`$db2`即可,如:
```php
<?php
/* DOCUMENTOPIA.COM
******************************************************************************************
* This software is provided "as is", without warranty of any kind, express or implied,
* including but not limited to the warranties of merchantability, fitness for a particular
* purpose and noninfringement. In no event shall Documentopia.com LLC be liable for any
* claim, damages or other liability, whether in an action of contract, tort or otherwise,
* arising from, out of or in connection with Documentopia.com LLC or the use or other
* dealings with Documentopia.com LLC.
*
* Apache License, Version 2.0 
* http://www.apache.org/licenses/LICENSE-2.0 

*
* @link http://www.documentopia.com/licensing
*
* @author David Dula <coding@documentopia.com>
* @copyright - 2012 - Documentopia.com
******************************************************************************************
*/

if(!defined('DB_DEBUG')){
    define('DB_DEBUG', FALSE);
}

if(!defined('DB_LOAD_FORGE')){
    define('DB_LOAD_FORGE', true);
}





error_reporting(E_ALL & ~(E_DEPRECATED | E_STRICT));

// This should be the base path to the database folder
if ( ! defined('BASEPATH')) {
	define('BASEPATH', pathinfo(__FILE__, PATHINFO_DIRNAME).'/');
	}
if(!function_exists('get_instance')){
    function get_instance() {
        global $db2;
        if (isset($db2)) {
            $item->db = $db2;
            return ($item);
        } else {
            return (null);
        }
    }
}

if(!function_exists('log_message')){
    function log_message($level = 'error', $message, $php_error = FALSE) {
        if (DB_DEBUG) echo $message . "\n";
    }
}
if(!function_exists('show_error')){
    function show_error($message, $status_code = 500, $heading = 'An Error Was Encountered') {
        if (DB_DEBUG) echo $message . "\n";
    }
}




// Open the configfile
include_once ('database.php');
if(!class_exists('DB')){
    require_once (BASEPATH . 'database/DB.php');
}
if(!isset($db2)){
    $db2['default']['hostname'] = "localhost";
    $db2['default']['username'] = "user";
    $db2['default']['password'] = "password";
    $db2['default']['database'] = "database";
    $db2['default']['dbdriver'] = "mysqli";
}
// Create The DB var
$db2 = DB($db2['default']);
if (DB_LOAD_FORGE) {

    require_once (BASEPATH . 'database/DB_forge.php');
    require_once (BASEPATH . 'database/DB_utility.php');
    require_once (BASEPATH . 'database/drivers/' . $db2->dbdriver . '/' . $db2->dbdriver . '_utility.php');
    require_once (BASEPATH . 'database/drivers/' . $db2->dbdriver . '/' . $db2->dbdriver . '_forge.php');
    $class = 'CI_DB_' . $db2->dbdriver . '_forge';
    $dbforge = new $class();
}



// At this point $db is set to the databaes adnd $dbforge is set to dbforge

//$query = $db2->get('member');
//$row = $query->result_array();
//print_r($row);


?>
```
